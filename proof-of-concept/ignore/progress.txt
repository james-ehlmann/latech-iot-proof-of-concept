What I've done so far / What you need to do to get this app running for yourself:

You'll need to install:

git bash

visual studio for asp.net / azure / sql (2017 is what I used)

SSMS (latest? I think that I used the latest...) 
sql server express. (2016 is what I used) http://stackoverflow.com/questions/360141/how-to-connect-to-local-instance-of-sql-server-2008-express
learn how to register server groups, it'll make debugging and using this 100% easier. 

1. signed up for azure free trial (30 days or $200) (much trial and error, not really replicatable)

2. create azure webapp + database (for asp.net) it's actually pretty easy to do.
There is a create new webapp option, I chose c# with asp.net and a database, with api controllers... 

3. Connect an azure web app to github so that when I push my app goes there 
in deployment, there is an option for github, just give it the url. Deployment options also shows when your app has been redeployed & any issues that might arise.

4. Connected to the transact sql database with ssms, you must add firewall rule to db, 'add client ip' or else it will not allow you to connect at all, firewalls amiright?.

5. create database table structure with /db/create.sql
should occur in connection through ssms to azure database that you created, connect to using the connections strings provided by azure. 

6. All of the controllers for the api are in /controllers and extend (:) ApiController in c#

7. build dummy client app in python for proof of concept. (pretty easy muh dude.) 

9. secure api (with https & rest preferably)
Already is secured by microsoft for us, what bros!

--TODO
10. Any more luxury methods that we might need that are not barebones proof of concept... 


local:
asp.net can deploy locally with visual studio
connecting to sql server require configuring sql server to allow sql authentication on local
this is done in the sql server configuration manager. 
create a database called collected_data (that was my database name.)
set a user up to connect to it called iot with password iot (also give this user sysadmin, not best practice but everyone who isn't a sysadmin does this for mssql...) 
also enable tcp connections through sql server configuration manager for sql express